

/*============================================================================================
 *		func_bit: 使用宏定义来执行位操作
 *============================================================================================*/

#ifndef   func_bit_h
#define   func_bit_h

 
/*============================================================================================
 *		单个位操作,  位（从0开始）
 *============================================================================================*/
   
	
	/*============================================================================================
	 *		 函数名：ClearBit
	 *		 功能:  变量(XX)某位(N)置0，
	 *       参数： XX：被操作的变量
	 *			     N：被操作的位  
	 *============================================================================================*/
    #define SetBit(XX,N) (XX)=(XX)|(0x1<<N)
    
	/*============================================================================================
	 *		 函数名：SetBit
	 *		 功能:  变量(XX)某位(N)置1，
	 *       参数： XX：被操作的变量
	 *			     N：被操作的位  
	 *============================================================================================*/
    #define ClearBit(XX,N) (XX)=(XX)&(~(0x1<<N))
	/*============================================================================================
	 *		 函数名：ReadBit
	 *		 功能:  读取变量(XX)某位(N)是1还是0，
	 *       参数： XX：被读取的变量
	 *			     N：被读取的位  
	 *============================================================================================*/
    #define ReadBit(XX,N)  (XX>>N)&(0x1)   							

/*============================================================================================
 *		读写多位
 *============================================================================================*/
   
	/*============================================================================================
	 *		 函数名：SetBits
	 *		 功能:  变量(XX) 第LOW位到第HIGH位 置为DATA，
	 *       参数： XX：被操作的变量
	 *			    LOW： 被操作位的最低位
     *              HIGH：被操作位的最低位
     *              DATA: 
     *       注意： DATA大小要限制在 LOW到HIGH 这几位能表示的数值范围内
     *			    使用前先测试一下，尤其是最高位溢出时是否正确	 
	 *============================================================================================*/
    #define SetBits(XX,LOW,HIGH,DATA)   XX=(XX&(~((1<<HIGH)-(1<<LOW)+(1<<HIGH))))+(DATA<<LOW)
   
    /*============================================================================================
	 *		 函数名：ReadBits
	 *		 功能:  读取 变量(XX) 第LOW位到第HIGH位 的值，
	 *       参数： XX：被操作的变量
	 *			    LOW： 被操作位的最低位
     *              HIGH：被操作位的最低位	 
	 *============================================================================================*/
    #define ReadBits(XX,LOW,HIGH)   (XX>>LOW)&((1<<(HIGH-LOW+1))-1)
    
    
#endif











